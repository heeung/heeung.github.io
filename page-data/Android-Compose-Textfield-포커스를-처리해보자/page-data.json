{"componentChunkName":"component---src-templates-post-jsx","path":"/Android-Compose-Textfield-포커스를-처리해보자/","result":{"data":{"site":{"siteMetadata":{"title":"heeung"}},"markdownRemark":{"id":"39bdc91a-d3fb-57bc-b4b7-4b7f4de9f029","excerpt":"상황 : 회원가입 페이지 구현 중 TextField에 관한 UX적인 부분의 구현이 필요했다. 📌 구현 동작   📌 화면 터치로 TextField focus 빼기 처음에 할 것은 Modifier의 확장함수를 통해 전체화면의 터치 이벤트를 감지하여 clearFocus()하는 동작을 만들어 주는 것. focusManager가 기능의 90프로를 차지하기 때문에 …","html":"<blockquote>\n<p>상황 : 회원가입 페이지 구현 중 TextField에 관한 UX적인 부분의 구현이 필요했다.</p>\n</blockquote>\n<h2 id=\"-구현-동작\" style=\"position:relative;\"><a href=\"#-%EA%B5%AC%ED%98%84-%EB%8F%99%EC%9E%91\" aria-label=\" 구현 동작 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>📌 구현 동작</h2>\n<table>\n<thead>\n<tr>\n<th><img src='https://velog.velcdn.com/images/heeung/post/f6be68e7-7827-4b4a-93f6-2457a76e6c3e/image.gif' width='250'></th>\n<th><img src='https://velog.velcdn.com/images/heeung/post/a61dece0-680e-4bf6-8f21-cd025a575176/image.gif' width='250'></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<br />\n<h2 id=\"화면-터치로-TextField-focus-빼기\" style=\"position:relative;\"><a href=\"#%ED%99%94%EB%A9%B4-%ED%84%B0%EC%B9%98%EB%A1%9C-TextField-focus-%EB%B9%BC%EA%B8%B0\" aria-label=\"화면 터치로 TextField focus 빼기 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>📌 화면 터치로 TextField focus 빼기</h2>\n<ul>\n<li>처음에 할 것은 Modifier의 확장함수를 통해 전체화면의 터치 이벤트를 감지하여 clearFocus()하는 동작을 만들어 주는 것.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">addFocusCleaner</span><span class=\"token punctuation\">(</span>focusManager<span class=\"token operator\">:</span> FocusManager<span class=\"token punctuation\">,</span> doOnClear<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Modifier <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">pointerInput</span><span class=\"token punctuation\">(</span>Unit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">detectTapGestures</span><span class=\"token punctuation\">(</span>onTap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">doOnClear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            focusManager<span class=\"token punctuation\">.</span><span class=\"token function\">clearFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>focusManager가 기능의 90프로를 차지하기 때문에 핵심이라고 생각했습니다.</li>\n<li>사용할 곳에서는 →</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> focusManager <span class=\"token operator\">=</span> LocalFocusManager<span class=\"token punctuation\">.</span>current</code></pre></div>\n<ul>\n<li>포커스 매니저를 불러옵니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">MainContent</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n\t\t        modifier <span class=\"token operator\">=</span> Modifier\n\t\t            <span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t            <span class=\"token punctuation\">.</span><span class=\"token function\">addFocusCleaner</span><span class=\"token punctuation\">(</span>focusManager<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n\t\t\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>사용할 컴포저블 함수의 최상위 뷰에서 .addFocusCleaner를 Modifier에 추가해주면 그 아래 TextField들의 포커스 관리가 됩니다.</li>\n</ul>\n<br />\n<h2 id=\"안드로이드-키보드-Enter키-누르면-다음-TextField-포커싱-하기\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%ED%82%A4%EB%B3%B4%EB%93%9C-Enter%ED%82%A4-%EB%88%84%EB%A5%B4%EB%A9%B4-%EB%8B%A4%EC%9D%8C-TextField-%ED%8F%AC%EC%BB%A4%EC%8B%B1-%ED%95%98%EA%B8%B0\" aria-label=\"안드로이드 키보드 Enter키 누르면 다음 TextField 포커싱 하기 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>📌 안드로이드 키보드 Enter키 누르면 다음 TextField 포커싱 하기</h2>\n<ul>\n<li>TextField를 <code class=\"language-text\">singleLine = true</code>로 만들면 키보드의 엔터키가 “완료”키로 바뀌어있는것을 확인할 수 있습니다.</li>\n<li>완료키로 바뀌었기때문에 <code class=\"language-text\">KeyboardActions</code>의 <code class=\"language-text\">onDone</code>으로 구현이 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@OptIn</span><span class=\"token punctuation\">(</span>ExperimentalMaterial3Api<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">MainTextField</span><span class=\"token punctuation\">(</span>\n    text<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">,</span>\n    onValueChange<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit<span class=\"token punctuation\">,</span>\n    focusManager<span class=\"token operator\">:</span> FocusManager\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">OutlinedTextField</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        label <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"입력\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        value <span class=\"token operator\">=</span> text<span class=\"token punctuation\">,</span>\n        onValueChange <span class=\"token operator\">=</span> onValueChange<span class=\"token punctuation\">,</span>\n        singleLine <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        keyboardActions <span class=\"token operator\">=</span> <span class=\"token function\">KeyboardActions</span><span class=\"token punctuation\">(</span>onDone <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            focusManager<span class=\"token punctuation\">.</span><span class=\"token function\">moveFocus</span><span class=\"token punctuation\">(</span>FocusDirection<span class=\"token punctuation\">.</span>Next<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br />\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>🔎 전체 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">package</span> test<span class=\"token punctuation\">.</span>composestarter\n\n<span class=\"token keyword\">import</span> android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span>Bundle\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>activity<span class=\"token punctuation\">.</span>ComponentActivity\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>activity<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>setContent\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>background\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>gestures<span class=\"token punctuation\">.</span>detectTapGestures\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>Column\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>fillMaxSize\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>fillMaxWidth\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>padding\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>foundation<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>KeyboardActions\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>material3<span class=\"token punctuation\">.</span>ExperimentalMaterial3Api\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>material3<span class=\"token punctuation\">.</span>OutlinedTextField\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>material3<span class=\"token punctuation\">.</span>Scaffold\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>Composable\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>getValue\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>mutableStateOf\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>remember\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>setValue\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>ExperimentalComposeUiApi\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>Modifier\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>focus<span class=\"token punctuation\">.</span>FocusDirection\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>focus<span class=\"token punctuation\">.</span>FocusManager\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">.</span>pointerInput\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">.</span>LocalFocusManager\n<span class=\"token keyword\">import</span> androidx<span class=\"token punctuation\">.</span>compose<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>unit<span class=\"token punctuation\">.</span>dp\n<span class=\"token keyword\">import</span> test<span class=\"token punctuation\">.</span>composestarter<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>ComposeStarterTheme\n<span class=\"token keyword\">import</span> test<span class=\"token punctuation\">.</span>composestarter<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>WhiteColor\n\n<span class=\"token keyword\">class</span> MainActivity <span class=\"token operator\">:</span> <span class=\"token function\">ComponentActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span>\n        setContent <span class=\"token punctuation\">{</span>\n            ComposeStarterTheme <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">MainScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation builtin\">@OptIn</span><span class=\"token punctuation\">(</span>ExperimentalMaterial3Api<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">MainScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> focusManager <span class=\"token operator\">=</span> LocalFocusManager<span class=\"token punctuation\">.</span>current\n\n    <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">padding</span><span class=\"token punctuation\">(</span>horizontal <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">.</span>dp<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span>WhiteColor<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">addFocusCleaner</span><span class=\"token punctuation\">(</span>focusManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> paddingValues <span class=\"token operator\">-></span>\n        paddingValues\n        <span class=\"token keyword\">var</span> text1 <span class=\"token keyword\">by</span> remember <span class=\"token punctuation\">{</span> <span class=\"token function\">mutableStateOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">var</span> text2 <span class=\"token keyword\">by</span> remember <span class=\"token punctuation\">{</span> <span class=\"token function\">mutableStateOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">var</span> text3 <span class=\"token keyword\">by</span> remember <span class=\"token punctuation\">{</span> <span class=\"token function\">mutableStateOf</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">MainTextField</span><span class=\"token punctuation\">(</span>\n                text <span class=\"token operator\">=</span> text1<span class=\"token punctuation\">,</span>\n                onValueChange <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    text1 <span class=\"token operator\">=</span> it\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                focusManager <span class=\"token operator\">=</span> focusManager\n            <span class=\"token punctuation\">)</span>\n            <span class=\"token function\">MainTextField</span><span class=\"token punctuation\">(</span>\n                text <span class=\"token operator\">=</span> text2<span class=\"token punctuation\">,</span>\n                onValueChange <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    text2 <span class=\"token operator\">=</span> it\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                focusManager <span class=\"token operator\">=</span> focusManager\n            <span class=\"token punctuation\">)</span>\n            <span class=\"token function\">MainTextField</span><span class=\"token punctuation\">(</span>\n                text <span class=\"token operator\">=</span> text3<span class=\"token punctuation\">,</span>\n                onValueChange <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    text3 <span class=\"token operator\">=</span> it\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                focusManager <span class=\"token operator\">=</span> focusManager\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation builtin\">@OptIn</span><span class=\"token punctuation\">(</span>ExperimentalMaterial3Api<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">MainTextField</span><span class=\"token punctuation\">(</span>\n    text<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">,</span>\n    onValueChange<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit<span class=\"token punctuation\">,</span>\n    focusManager<span class=\"token operator\">:</span> FocusManager\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">OutlinedTextField</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        label <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"입력\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        value <span class=\"token operator\">=</span> text<span class=\"token punctuation\">,</span>\n        onValueChange <span class=\"token operator\">=</span> onValueChange<span class=\"token punctuation\">,</span>\n        singleLine <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        keyboardActions <span class=\"token operator\">=</span> <span class=\"token function\">KeyboardActions</span><span class=\"token punctuation\">(</span>onDone <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            focusManager<span class=\"token punctuation\">.</span><span class=\"token function\">moveFocus</span><span class=\"token punctuation\">(</span>FocusDirection<span class=\"token punctuation\">.</span>Next<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">addFocusCleaner</span><span class=\"token punctuation\">(</span>focusManager<span class=\"token operator\">:</span> FocusManager<span class=\"token punctuation\">,</span> doOnClear<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Modifier <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">pointerInput</span><span class=\"token punctuation\">(</span>Unit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">detectTapGestures</span><span class=\"token punctuation\">(</span>onTap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">doOnClear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            focusManager<span class=\"token punctuation\">.</span><span class=\"token function\">clearFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Android Compose Textfield 포커스를 처리해보자","date":"September 18, 2023","update":"March 10, 2025","tags":["android","compose"],"series":null},"fields":{"slug":"/Android-Compose-Textfield-포커스를-처리해보자/","readingTime":{"minutes":3.09}}},"seriesList":{"edges":[{"node":{"id":"39bdc91a-d3fb-57bc-b4b7-4b7f4de9f029","fields":{"slug":"/Android-Compose-Textfield-포커스를-처리해보자/"},"frontmatter":{"title":"Android Compose Textfield 포커스를 처리해보자"}}},{"node":{"id":"dc6d39ec-6062-55b1-b0e9-c214efc33b3d","fields":{"slug":"/about/"},"frontmatter":{"title":""}}}]},"previous":null,"next":null},"pageContext":{"id":"39bdc91a-d3fb-57bc-b4b7-4b7f4de9f029","series":null,"previousPostId":null,"nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}